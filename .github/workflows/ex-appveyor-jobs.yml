# Copyright 2020-2024, Intel Corporation
# SPDX-License-Identifier: BSD-3-Clause

# These jobs test builds with WASM targets on Ubuntu and Windows.
# Windows job also runs perf.py and RUN_TESTS tests.
name: Ex Appveyor

on:
  workflow_dispatch:
  pull_request:

env:
  LLVM_REPO: https://github.com/ispc/ispc.dependencies
  ISPC_HOME: ${{ github.workspace }}
  LLVM_HOME: ${{ github.workspace }}
  LLVM_VERSION: "18.1"

jobs:
  ubuntu:
    runs-on: ubuntu-22.04
    env:
      LLVM_TAR: llvm-18.1.8-ubuntu22.04-Release+Asserts-x86.arm.wasm.tar.xz

    steps:
    - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      with:
        submodules: false

    - name: Install Dependencies
      run: |
        .github/workflows/scripts/install-build-deps.sh

    - name: Configure
      run: |
        # Setup emcc for WASM target
        source scripts/install_emscripten.sh && emcc --version
        cmake -B build ./ -DISPC_PREPARE_PACKAGE=ON -DCMAKE_INSTALL_PREFIX="$ISPC_HOME"/install -DISPC_CROSS=ON -DWASM_ENABLED=ON -DCMAKE_CXX_FLAGS="-Werror"

    - name: Build
      run: cd build && make package -j"$(nproc)"

    - name: Test
      run: |
        cd build
        bin/ispc --support-matrix
        make check-all

    - name: Upload Artifacts
      uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
      with:
        name: ispc
        path: build/ispc-*

  windows:
    runs-on: windows-2019
    env:
      CROSS_TOOLS_GNUWIN32: "C:\\projects\\cross\\gnuwin32"
      LLVM_TAR: llvm-18.1.8-win.vs2019-Release+Asserts-x86.arm.wasm.tar.7z

    steps:
    - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
      with:
        submodules: false

    - name: Install dependencies
      run: |
        .github/workflows/scripts/install-build-deps.ps1

    - name: Build and Test
      shell: cmd
      run: |
        call scripts\install_emscripten.bat
        set VSVARS="C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        call %VSVARS%
        cmake . -B build -Thost=x64 -G "Visual Studio 16" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=%ISPC_HOME%\install -DISPC_PREPARE_PACKAGE=ON -DISPC_CROSS=ON -DISPC_GNUWIN32_PATH=%CROSS_TOOLS_GNUWIN32% -DWASM_ENABLED=ON -DISPC_INCLUDE_BENCHMARKS=ON
        cmake --build build --config Release --target package --verbose
        set PATH=%ISPC_HOME%\build\bin\Release;%PATH%
        cd %ISPC_HOME%
        check_isa.exe
        ispc --support-matrix
        python scripts\perf.py -n 1 -g "Visual Studio 16" && ^
        cmake --build build --config Release --target check-all
        cmake --build build --config Release --target RUN_TESTS

    - name: Upload artifacts
      uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
      with:
        name: ispc-windows
        path: build/ispc-*-windows.zip
